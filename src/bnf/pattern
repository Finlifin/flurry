-- literal expressions
int
real
str
bool
symbol
char_str

-- comptime expressions
case get_env("say you, say me")

-- slice
basic -> [ listof(pattern) ]
[23, 12, 4, 4 or 23, ...]

-- struct
arbitary -> .{ listof(pair(id, pattern)) }

-- tuple
( listof(pattern) )

-- enum

-- optional
null
some?

-- ignore
...
... as something -- slice tail only

-- buttom
_
_ as id

-- top
id

-- binding
binding -> pattern as id


-- todo: bit

-- binary or postfix
or_pattern -> pattern or pattern
range -> pattern? .. pattern?
guard -> pattern if expr





